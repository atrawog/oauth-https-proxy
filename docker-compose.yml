services:
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    # SECURITY: Redis should NEVER be exposed to the internet!
    # ports:
    #   - "6379:6379"  # REMOVED - Only accessible within Docker network
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - acme_network

  acme-certmanager:
    build: .
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      - REDIS_URL=${REDIS_URL}
      - HTTP_PORT=80
      - HTTPS_PORT=443
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - PYTHONPATH=/app
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
      # Mount source code for development - allows hot-reloading
      - ./src:/app/src
      - ./run.py:/app/run.py
      - ./scripts:/app/scripts
      - ./tests:/app/tests
    networks:
      - acme_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  mcp-oauth-dynamicclient:
    build: ./mcp-oauth-dynamicclient
    restart: unless-stopped
    # No ports exposed - accessed via acme-certmanager proxy
    environment:
      - REDIS_URL=${REDIS_URL}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - BASE_DOMAIN=${BASE_DOMAIN}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./logs/oauth:/app/logs
    networks:
      acme_network:
        aliases:
          - oauth-server
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  mcp-echo-streamablehttp-server-stateful:
    build: ./mcp-echo-streamablehttp-server-stateful
    restart: unless-stopped
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./logs/mcp-echo-stateful:/app/logs
    networks:
      acme_network:
        aliases:
          - echo-stateful

  mcp-echo-streamablehttp-server-stateless:
    build: ./mcp-echo-streamablehttp-server-stateless
    restart: unless-stopped
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./logs/mcp-echo-stateless:/app/logs
    networks:
      - acme_network

  # fetcher-mcp:
  #   build: ./fetcher-mcp
  #   restart: unless-stopped
  #   environment:
  #     - LOG_LEVEL=${LOG_LEVEL:-INFO}
  #     - NAVIGATION_TIMEOUT=${FETCHER_NAVIGATION_TIMEOUT}
  #   volumes:
  #     - ./logs/fetcher-mcp:/app/logs
  #   networks:
  #     - acme_network
  #   cap_add:
  #     - SYS_ADMIN  # Required for Chrome

networks:
  acme_network:
    driver: bridge

volumes:
  redis_data: